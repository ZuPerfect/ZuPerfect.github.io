(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{447:function(a,t,s){"use strict";s.r(t);var e=s(65),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器输入地址到渲染出来的整个过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器输入地址到渲染出来的整个过程"}},[a._v("#")]),a._v(" 浏览器输入地址到渲染出来的整个过程")]),a._v(" "),s("h2",{attrs:{id:"一、获取服务器的ip地址-dns预解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、获取服务器的ip地址-dns预解析"}},[a._v("#")]),a._v(" 一、获取服务器的IP地址（DNS预解析）")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1、在浏览器的缓存中查找，如果没有则进行下一步\n2、在系统缓存中查找（本地的hosts文件），如果没有则进行下一步\n")])])]),s("h2",{attrs:{id:"二、建立tcp-ip连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、建立tcp-ip连接"}},[a._v("#")]),a._v(" 二、建立tcp/ip连接")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("三次握手\n1、客户端对服务器说：我要发请求了，可以吗？\n2、服务骑对客户端说：可以，你发吧！\n3、客户端对服务器说：好的，我发了\n")])])]),s("h2",{attrs:{id:"三、发送请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、发送请求"}},[a._v("#")]),a._v(" 三、发送请求")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("通过get或者post方式给服务器发送请求\n")])])]),s("h2",{attrs:{id:"四、浏览器渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、浏览器渲染"}},[a._v("#")]),a._v(" 四、浏览器渲染")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("浏览器拿到从服务请求回来的html文件之后，根据渲染规则进行渲染，主要有以下几步：\n1、DOM树，解析HTML，构建DOM树\n2、CSS树，解析CSS，构建CSS树\n3、渲染树：将DOM树和CSS树结合起来生成渲染树（Render Tree）\n4、布局（layout）：根据渲染树（render tree），浏览器就知道页面中有哪些节点，以及各个节点于css的关系，从而直到每一个节点的位置和几何属性（重拍）\n5、绘制（print）：根据计算好的信息绘制整个页面（重绘）\n")])])]),s("h2",{attrs:{id:"五、断开连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、断开连接"}},[a._v("#")]),a._v(" 五、断开连接")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("四次挥手\n1、\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);